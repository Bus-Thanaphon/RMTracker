@model RMTracker.Core.Models.User_Works

@{
    ViewBag.Title = "Create";
}

<h2>สร้างออเดอร์</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>User_Works</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.C2BNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <table style="width:13%">
                <tr>
                    <td class="form-control-static" style="text-align:left;">@Html.Label("SO-", new { style = "font-weight: normal" })</td>
                    <td style="text-align:right; width:250px">@Html.TextBoxFor(model => model.C2BNo, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" }, @type = "number" })</td>
                </tr>
                @Html.ValidationMessageFor(model => model.C2BNo, "", new { @class = "text-danger" })
            </table>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order_Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order_Status, new { htmlAttributes = new { @class = "form-control", @Value = "อยู่ในคิว", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Order_Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name_Sale, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Name_Sale, new SelectList(Model.User_Sale, "Name", "Name"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name_Sale, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="สร้าง" class="btn btn-default" />
            @Html.ActionLink("ย้อนกลับ", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var showAlert = "@ViewBag.showAlert";
    var alertMessage = "@ViewBag.alertMessage";
    if (showAlert === "True") {
        alert(alertMessage);
    }
</script>